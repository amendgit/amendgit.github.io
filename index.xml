<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>amendgit`s blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on amendgit`s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 20 Aug 2017 21:38:52 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description>Hugo is a static site engine written in Go.
It makes use of a variety of open source projects including:
 Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>Leetcode Solutions 081 100</title>
      <link>http://localhost:1313/post/leetcode/leetcode-solutions-081-100/</link>
      <pubDate>Tue, 21 Aug 2018 14:21:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/leetcode-solutions-081-100/</guid>
      <description>&lt;p&gt;本文用来记录我的leetcode解题报告，用于之后的代码优化、查阅和复习。这里是第81题到第100题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leetcode Solutions Index</title>
      <link>http://localhost:1313/post/leetcode/leetcode-solutions/</link>
      <pubDate>Mon, 06 Aug 2018 23:27:54 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/leetcode-solutions/</guid>
      <description>&lt;p&gt;本文用来记录我的leetcode解题报告，用于之后的代码优化、查阅和复习，这里是解题索引。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leetcode Solutions 061 080</title>
      <link>http://localhost:1313/post/leetcode/leetcode-solutions-061-080/</link>
      <pubDate>Thu, 02 Aug 2018 11:33:25 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/leetcode-solutions-061-080/</guid>
      <description>&lt;p&gt;本文用来记录我的leetcode解题报告，用于之后的代码优化、查阅和复习。这里是第61题到第80题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leetcode Solutions 041 060</title>
      <link>http://localhost:1313/post/leetcode/leetcode-solutions-041-060/</link>
      <pubDate>Wed, 01 Aug 2018 11:33:16 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/leetcode-solutions-041-060/</guid>
      <description>&lt;p&gt;本文用来记录我的leetcode解题报告，用于之后的代码优化、查阅和复习。这里是第41题到第60题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leetcode Solutions 021 040</title>
      <link>http://localhost:1313/post/leetcode/leetcode-solutions-021-040/</link>
      <pubDate>Sun, 01 Jul 2018 11:33:03 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/leetcode-solutions-021-040/</guid>
      <description>&lt;p&gt;本文用来记录我的leetcode解题报告，用于之后的代码优化、查阅和复习。这里是第21题到第40题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leetcode Solutions 001-020</title>
      <link>http://localhost:1313/post/leetcode/leetcode-solutions-001-020/</link>
      <pubDate>Fri, 01 Jun 2018 15:34:45 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/leetcode-solutions-001-020/</guid>
      <description>&lt;p&gt;本文用来记录我的leetcode解题报告，用于之后的代码优化、查阅和复习。这里是第1题到第20题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leetcode Solutions Others</title>
      <link>http://localhost:1313/post/leetcode/leetcode-solutions-others/</link>
      <pubDate>Fri, 02 Feb 2018 09:49:48 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/leetcode-solutions-others/</guid>
      <description>189. Rotate Array link: https://leetcode.com/problems/rotate-array/description/
class Solution { public: void rotate(vector&amp;lt;int&amp;gt;&amp;amp; nums, int k) { int len = nums.size(); vector&amp;lt;int&amp;gt; tmp(len, 0); for (int i=0, j=k%len; i&amp;lt;len; i++, j=(i+k)%len) tmp[j] = nums[i]; nums.swap(tmp); } };  212. Word Search II link: https://leetcode.com/problems/word-search-ii/description/
class Solution { public: struct TrieNode { char flag; TrieNode* next[26]; TrieNode() { flag = 0; fill_n(next, 26, nullptr); } ~TrieNode() { for (auto p : next) if (p) delete p; } }; vector&amp;lt;string&amp;gt; findWords(vector&amp;lt;vector&amp;lt;char&amp;gt;&amp;gt;&amp;amp; board, vector&amp;lt;string&amp;gt;&amp;amp; words) { if (board.</description>
    </item>
    
    <item>
      <title>cs224n assignment 2</title>
      <link>http://localhost:1313/post/cs224n/cs224n-assignment-2/</link>
      <pubDate>Tue, 12 Sep 2017 22:52:06 +0800</pubDate>
      
      <guid>http://localhost:1313/post/cs224n/cs224n-assignment-2/</guid>
      <description>&lt;p&gt;自学cs224n（nlp with dl）的assigment 2，纯属个人学习和爱好。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leetcode Solutions 141 160</title>
      <link>http://localhost:1313/post/leetcode/leetcode-solutions-141-160/</link>
      <pubDate>Sat, 02 Sep 2017 08:31:29 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/leetcode-solutions-141-160/</guid>
      <description>&lt;p&gt;本文用来记录我的leetcode解题报告，用于之后的代码优化、查阅和复习。这里是第141题到第160题。部分答案是以前的答案。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cs224n assignment 1</title>
      <link>http://localhost:1313/post/cs224n/cs224n-assignment-1/</link>
      <pubDate>Wed, 12 Jul 2017 19:43:09 +0800</pubDate>
      
      <guid>http://localhost:1313/post/cs224n/cs224n-assignment-1/</guid>
      <description>&lt;p&gt;自学cs224n（nlp with dl）的assigment 1，纯属个人学习和爱好。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>深入理解Linux之进程初探</title>
      <link>http://localhost:1313/post/linux/linux-understand-process/</link>
      <pubDate>Fri, 12 May 2017 22:54:41 +0800</pubDate>
      
      <guid>http://localhost:1313/post/linux/linux-understand-process/</guid>
      <description>一. 关于fork调用 fork()调用创建一个新的进程，该进程几乎是当前进程的一个完全拷贝。由fork()创建的新进程被称为子进程。fork函</description>
    </item>
    
    <item>
      <title>Leetcode Solutions 121 140</title>
      <link>http://localhost:1313/post/leetcode/leetcode-solutions-121-140/</link>
      <pubDate>Tue, 02 May 2017 08:31:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/leetcode-solutions-121-140/</guid>
      <description>&lt;p&gt;本文用来记录我的leetcode解题报告，用于之后的代码优化、查阅和复习。这里是第121题到第140题。部分答案是以前的答案。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>深入理解Linux之操作系统是如何工作的</title>
      <link>http://localhost:1313/post/linux/linux-how-os-works/</link>
      <pubDate>Wed, 12 Apr 2017 22:54:25 +0800</pubDate>
      
      <guid>http://localhost:1313/post/linux/linux-how-os-works/</guid>
      <description>一、操作系统的基础 1.存储程序计算机 由美籍匈牙利数学家冯·诺依曼于1946年提出的，把程序本身当作数据来对待，程序和该程序处理的数据用同样的</description>
    </item>
    
    <item>
      <title>Leetcode Solutions 101 120</title>
      <link>http://localhost:1313/post/leetcode/leetcode-solutions-101-120/</link>
      <pubDate>Sun, 02 Apr 2017 08:30:56 +0800</pubDate>
      
      <guid>http://localhost:1313/post/leetcode/leetcode-solutions-101-120/</guid>
      <description>&lt;p&gt;本文用来记录我的leetcode解题报告，用于之后的代码优化、查阅和复习。这里是第101题到第120题。部分答案是以前的答案。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>深入理解Linux之计算机是怎样工作的</title>
      <link>http://localhost:1313/post/linux/linux-how-computer-works/</link>
      <pubDate>Sun, 12 Mar 2017 22:54:06 +0800</pubDate>
      
      <guid>http://localhost:1313/post/linux/linux-how-computer-works/</guid>
      <description>导读 在深入理解Linux之前，我们需要了解计算机是如何工作的。使用Example的c代码分别生成.cpp,.s,.o和ELF可执行文件，并加</description>
    </item>
    
  </channel>
</rss>